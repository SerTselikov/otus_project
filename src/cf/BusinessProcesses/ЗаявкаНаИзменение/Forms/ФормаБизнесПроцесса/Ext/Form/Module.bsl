
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.ЗадачаИсполнителя) Тогда
		ЗадачаИсполнителя = Параметры.ЗадачаИсполнителя;
		Элементы.СледующийСтатус.СписокВыбора.ЗагрузитьЗначения(БизнесПроцессы.ЗаявкаНаИзменение.ДоступныеСтатусы(Объект.Статус));
		Если Элементы.СледующийСтатус.СписокВыбора.Количество() = 1 Тогда
			СледующийСтатус = Элементы.СледующийСтатус.СписокВыбора[0].Значение;
		КонецЕсли;
		Элементы.ФормаЗадачаВыполнена.Видимость = Истина;
		Элементы.ФормаСтартовать.Видимость = Ложь;
		Элементы.ЗадачаИсполнителяДата.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗадачу(Команда)
	Если НЕ ЗначениеЗаполнено(СледующийСтатус) Тогда
		ПоказатьПредупреждение(, "Выберите следующий статус");
		Возврат;
	КонецЕсли;
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	Успешно = ВыполнитьЗадачуНаСервере();
	Если Успешно Тогда
		Закрыть();
	Иначе
		Прочитать();
	КонецЕсли;
	ОповеститьОбИзменении(ЗадачаИсполнителя);
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВыполнитьЗадачуНаСервере()
	Успешно = Истина;
	НачатьТранзакцию();
	Попытка
		Объект.Статус = СледующийСтатус;
		Записать();
		ЗадачаИсполнителя.ПолучитьОбъект().ВыполнитьЗадачу();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Успешно = Ложь;
	КонецПопытки;
	Возврат Успешно;
КонецФункции

&НаКлиенте
Процедура Стартовать(Команда)
	СтартоватьНаСервере();
КонецПроцедуры

Процедура СтартоватьНаСервере()
	БПОбъект = РеквизитФормыВЗначение("Объект");
	БПОбъект.Записать();
	БПОбъект.Старт();
	ЗначениеВРеквизитФормы(БПОбъект, "Объект");
	Модифицированность = Ложь;
КонецПроцедуры

#КонецОбласти

