
Процедура ДоработкаТребуетсяПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = Статус <> Перечисления.СтатусыЗаявкиНаИзменение.ДоработкаНеТребуется;
КонецПроцедуры

Процедура ДоработкаСогласованаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = Статус <> Перечисления.СтатусыЗаявкиНаИзменение.ДоработкаНеСогласована;
КонецПроцедуры

Процедура ЗамечанияОтАналитикаЕстьПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = Статус = Перечисления.СтатусыЗаявкиНаИзменение.ВРазработке;
КонецПроцедуры

Процедура ЗамечанияОтТехлидаЕстьПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = Статус = Перечисления.СтатусыЗаявкиНаИзменение.ВРазработке;
КонецПроцедуры

Процедура ВзятьВПроработкуПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Аналитик = ПараметрыСеанса.ТекущийПользователь;
	ДатаНачалаРаботы = ТекущаяДатаСеанса();
	Записать();
КонецПроцедуры

Процедура УточнитьПостановкуЗадачиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
		ЗадачаОбъект.Исполнитель = Аналитик;
	КонецЦикла;
КонецПроцедуры

Процедура УточнитьПостановкуЗадачиПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если Статус = Перечисления.СтатусыЗаявкиНаИзменение.ВРазработке 
		И НЕ ЗначениеЗаполнено(Описание) Тогда
		ВызватьИсключение "Не заполнено описание";
	КонецЕсли;
	Если Аналитик <> ПараметрыСеанса.ТекущийПользователь Тогда
		Аналитик = ПараметрыСеанса.ТекущийПользователь;
		Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ОценитьТрудозатратыПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если НЕ ЗначениеЗаполнено(ПлановыеТрудозатраты) Тогда
		ВызватьИсключение "Не заполнены плановые трудозатраты";
	КонецЕсли;
	Если Техлид <> ПараметрыСеанса.ТекущийПользователь Тогда
		Техлид = ПараметрыСеанса.ТекущийПользователь;
		Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьДоработкуПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если Программист <> ПараметрыСеанса.ТекущийПользователь Тогда
		Программист = ПараметрыСеанса.ТекущийПользователь;
		Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьКодПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Если ЗначениеЗаполнено(Техлид) Тогда
		Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
			ЗадачаОбъект.Исполнитель = Техлид;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОценитьТрудозатратыПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Если ЗначениеЗаполнено(Техлид) Тогда
		Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
			ЗадачаОбъект.Исполнитель = Техлид;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура СогласоватьДоработкуПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Если ЗначениеЗаполнено(Акцептант) Тогда
		Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
			ЗадачаОбъект.Исполнитель = Акцептант;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьДоработкуПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Если ЗначениеЗаполнено(Программист) Тогда
		Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
			ЗадачаОбъект.Исполнитель = Программист;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПротестироватьДоработкуПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
		ЗадачаОбъект.Исполнитель = Аналитик;
	КонецЦикла;
КонецПроцедуры

Процедура СозданиеЗапросаНаСлияниеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
		ЗадачаОбъект.Исполнитель = Программист;
	КонецЦикла;
КонецПроцедуры

Процедура СдатьРаботуЗаказчикуПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого ЗадачаОбъект Из ФормируемыеЗадачи Цикл
		ЗадачаОбъект.Исполнитель = Аналитик;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ЭтоНовый() Тогда
		Если НЕ ЗначениеЗаполнено(Статус) Тогда
			Статус = БизнесПроцессы.ЗаявкаНаИзменение.ДоступныеСтатусы(Статус)[0];
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
