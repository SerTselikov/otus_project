#Область СлужебныйПрограммныйИнтерфейс

Функция ИнициализироватьКомпоненту(Компонента) Экспорт
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция НовыеПараметрыВходящегоСообщения() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("Адрес");
	Параметры.Вставить("Порт");
	Параметры.Вставить("Логин");
	Параметры.Вставить("Пароль");
	Параметры.Вставить("ВиртуальныйХост");
	
	Параметры.Вставить("ИмяОчереди");
	
	Возврат Параметры;
КонецФункции

Функция НовыеПараметрыИсходящегоСообщения() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("Адрес");
	Параметры.Вставить("Порт");
	Параметры.Вставить("Логин");
	Параметры.Вставить("Пароль");
	Параметры.Вставить("ВиртуальныйХост");
	
	Параметры.Вставить("ТочкаОбмена");
	Параметры.Вставить("КлючМаршрутизации");
	Параметры.Вставить("ТекстСообщения");
	
	Возврат Параметры;
КонецФункции

Процедура ОтправитьСообщение(КлиентКомпоненты, Параметры, ВыводитьСообщения = Ложь) Экспорт
	
	Попытка
		КлиентКомпоненты.Connect(
			Параметры.Адрес,
			Параметры.Порт,
			Параметры.Логин,
			Параметры.Пароль,
			Параметры.ВиртуальныйХост);
		
		КлиентКомпоненты.BasicPublish(
			Параметры.ТочкаОбмена,
			Параметры.КлючМаршрутизации,
			Параметры.ТекстСообщения,
			1,
			Ложь);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Если ВыводитьСообщения Тогда
		Сообщить("Сообщение успешно отправлено!");
	КонецЕсли;	
КонецПроцедуры

Функция ПрочитатьСообщение(КлиентКомпоненты, Параметры, ВыводитьСообщения = Ложь) Экспорт
	ОтветноеСообщение = "";
	
	Попытка
		КлиентКомпоненты.Connect(
			Параметры.Адрес,
			Параметры.Порт,
			Параметры.Логин,
			Параметры.Пароль,
			Параметры.ВиртуальныйХост);
		
		ИмяОчереди = Параметры.ИмяОчереди;
		
		Попытка
			//КлиентКомпоненты.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
			
			Потребитель = КлиентКомпоненты.BasicConsume(ИмяОчереди, "", Истина, Ложь, 0);
			
			Если КлиентКомпоненты.BasicConsumeMessage("", ОтветноеСообщение, 5) Тогда
				КлиентКомпоненты.BasicAck();
				ТекстСообщения = НСтр("ru='Сообщение успешно прочитано!'");
			Иначе
				ОтветноеСообщение = Неопределено;
				ТекстСообщения = НСтр("ru='Очередь пустая!'");
			КонецЕсли;
			Если ВыводитьСообщения Тогда
				Сообщить(ТекстСообщения);
			КонецЕсли;
			КлиентКомпоненты.BasicCancel("");
		Исключение
			ВызватьИсключение КлиентКомпоненты.GetLastError();
		КонецПопытки;
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка чтения сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Возврат ОтветноеСообщение;
КонецФункции

Процедура ПроверитьПодключение(КлиентКомпоненты, Параметры) Экспорт
	
	Попытка
		КлиентКомпоненты.Connect(
				Параметры.Адрес,
				Параметры.Порт,
				Параметры.Логин,
				Параметры.Пароль,
				Параметры.ВиртуальныйХост);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка подключения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Сообщить(НСтр("ru = 'Подключение успешно выполнено!'"));
	
КонецПроцедуры

#КонецОбласти