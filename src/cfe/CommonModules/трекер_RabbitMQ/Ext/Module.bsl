#Область ПрограммныйИнтерфейс

Функция ПолучитьКомпоненту() Экспорт
	
	КлиентКомпоненты = Неопределено;
	Если Не трекер_RabbitMQКлиентСервер.ИнициализироватьКомпоненту(КлиентКомпоненты) Тогда
		
		ПодключитьКомпоненту();
		трекер_RabbitMQКлиентСервер.ИнициализироватьКомпоненту(КлиентКомпоненты);
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;
КонецФункции

Процедура ОтправитьСообщениеВОчередьRabbitMQ(ТекстСообщения, КлючОчереди) Экспорт
	ПараметрыСообщения = трекер_RabbitMQКлиентСервер.НовыеПараметрыСообщения();
	ПараметрыПодключения = РегистрыСведений.трекер_ПараметрыRabbitMQ.ЗначенияПараметров();
	ЗаполнитьЗначенияСвойств(ПараметрыСообщения, ПараметрыПодключения);
	ПараметрыСообщения.ИмяОчереди = ПараметрыПодключения["ИмяОчереди" + КлючОчереди];
	ПараметрыСообщения.КлючМаршрутизации = ПараметрыПодключения["КлючМаршрутизации" + КлючОчереди];
	
	ПараметрыСообщения.ТекстСообщения = ТекстСообщения;
	
	КлиентКомпоненты = трекер_RabbitMQ.ПолучитьКомпоненту();
	трекер_RabbitMQКлиентСервер.ОтправитьСообщение(КлиентКомпоненты, ПараметрыСообщения);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ПодключитьКомпоненту(КомпонентаПодключена = Неопределено, ВыводитьСообщения = Ложь)
	
	АдресВоВременномХранилище = ПолучитьАдресМакетаКомпановки(Новый УникальныйИдентификатор);
	КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
			АдресВоВременномХранилище,
			"BITERP",
			ТипВнешнейКомпоненты.Native);
	Если ВыводитьСообщения Тогда
		Сообщить(НСтр("ru = 'Компонента подключена!'"));
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьАдресМакетаКомпановки(УникальныйИдентификатор) Экспорт
	
	МакетВнешнейКомпоненты    = Обработки.трекер_ПримерРаботыСКомпонентойPinkRabbitMQ.ПолучитьМакет("ВнешняяКомпонента");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(МакетВнешнейКомпоненты, УникальныйИдентификатор);
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

#КонецОбласти