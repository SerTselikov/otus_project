
#Область ПрограммныйИнтерфейс

Функция ОбъектВТекстСообщения(Объект, ТипОбъекта) Экспорт
	ДанныеОбъекта = Вычислить(СтрШаблон("ОбъектВДанныеОбъекта_%1(Объект)", ТипОбъекта)); 
	Возврат ДанныеВТекстСообщения(ТипОбъекта, ДанныеОбъекта);
КонецФункции

Процедура ПреобразоватьТекстСообщенияВОбъект(ТекстСообщения) Экспорт
	ДанныеСообщения = ТекстСообщенияВДанныеСообщения(ТекстСообщения);
	ИмяМетода = СтрШаблон("ПреобразоватьДанныеОбъектаВОбъект_%1(ДанныеСообщения.Данные);", ДанныеСообщения.ТипОбъекта);
	Выполнить(ИмяМетода);
КонецПроцедуры

#КонецОбласти

#Область СлужбеныеПроцедурыИФункции

Функция ОписаниеДанныхТипа(ТипОбъекта) 
	ОписаниеТипа = Вычислить(СтрШаблон("ОписаниеДанныхТипа_%1()", ТипОбъекта));
	Возврат ОписаниеТипа;
КонецФункции

Функция ДанныеВТекстСообщения(ТипОбъекта, Данные) 
	ОписаниеТипа = Новый Структура;
	ОписаниеТипа.Вставить("ТипОбъекта", ТипОбъекта);
	ОписаниеТипа.Вставить("Данные", Данные);
	ТекстСообщения = трекер_КоннекторHTTP.ОбъектВJson(ОписаниеТипа);
	Возврат ТекстСообщения;
КонецФункции

Функция ТекстСообщенияВДанныеСообщения(ТекстСообщения)
	ДанныеСообщения = КоннекторHTTP.JsonВОбъект(ТекстСообщения,, Новый Структура("ПрочитатьВСоответствие", Ложь));
	ТипОбъекта = ДанныеСообщения.ТипОбъекта;
	ДанныеОбъектаИзСообщения = ДанныеСообщения.Данные;
	ДанныеОбъекта = ОписаниеДанныхТипа(ТипОбъекта);
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДанныеОбъектаИзСообщения);
	// Заменяем на нормализованную структуру данных объекта
	ДанныеСообщения.Вставить("Данные", ДанныеОбъекта);
	Возврат ДанныеСообщения;
КонецФункции

#Область ЗаявкаНаИзменение

Функция ОписаниеДанныхТипа_ЗаявкаНаИзменение() 
	ОписаниеТипа = Новый Структура;
	ОписаниеТипа.Вставить("Заказчик");
	ОписаниеТипа.Вставить("ПрограммныйПродукт");
	ОписаниеТипа.Вставить("ПервичноеОбращение");
	
	Возврат ОписаниеТипа;
КонецФункции

Функция ОбъектВДанныеОбъекта_ЗаявкаНаИзменение(Объект)
	ДанныеОбъекта = ОписаниеДанныхТипа_ЗаявкаНаИзменение();
	ДанныеОбъекта.Заказчик = ИмяПользователя();
	ДанныеОбъекта.ПрограммныйПродукт = Объект.ПрограммныйПродукт.Имя;
	ДанныеОбъекта.ПервичноеОбращение = Объект.ПервичноеОбращение;
	Возврат ДанныеОбъекта;
КонецФункции

#КонецОбласти

#Область ПрограммныйПродукт

Функция ОписаниеДанныхТипа_ПрограммныйПродукт() 
	ОписаниеТипа = Новый Структура;
	ОписаниеТипа.Вставить("Ссылка");
	ОписаниеТипа.Вставить("Наименование");
	ОписаниеТипа.Вставить("Имя");
	
	Возврат ОписаниеТипа;
КонецФункции

Процедура ПреобразоватьДанныеОбъектаВОбъект_ПрограммныйПродукт(ДанныеОбъекта)
	СсылкаНаОбъект = Справочники.трекер_ПрограммныеПродукты.ПолучитьСсылку(Новый УникальныйИдентификатор(ДанныеОбъекта.Ссылка));
	Если ОбщегоНазначения.СсылкаСуществует(СсылкаНаОбъект) Тогда
		Объект = СсылкаНаОбъект.ПолучитьОбъект();
	Иначе // поиск по реквизиту Имя
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	трекер_ПрограммныеПродукты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.трекер_ПрограммныеПродукты КАК трекер_ПрограммныеПродукты
		|ГДЕ
		|	трекер_ПрограммныеПродукты.Имя = &Имя";
		
		Запрос.УстановитьПараметр("Имя", ДанныеОбъекта.Имя);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Объект = Выборка.Ссылка.ПолучитьОбъект();
		Иначе
			Объект = Справочники.трекер_ПрограммныеПродукты.СоздатьЭлемент();
			Объект.УстановитьСсылкуНового(СсылкаНаОбъект);
		КонецЕсли;
	КонецЕсли;
	
	Объект.Наименование = ДанныеОбъекта.Наименование;
	Объект.Имя = ДанныеОбъекта.Имя;
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
