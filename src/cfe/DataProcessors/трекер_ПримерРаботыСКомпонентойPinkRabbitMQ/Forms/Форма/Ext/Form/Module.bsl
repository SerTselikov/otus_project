&НаКлиенте
Перем Клиент, АдресВоВременномХранилище;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗначенияПараметров = РегистрыСведений.трекер_ПараметрыRabbitMQ.ЗначенияПараметров();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекстСообщения = "Test1";
	
КонецПроцедуры

#Область ПодключениеИнициализацияКомпоненты

&НаКлиенте
Функция ПолучитьКомпонентуКлиент()
	Возврат трекер_RabbitMQКлиент.ПолучитьКомпоненту(ЭтотОбъект);
КонецФункции

&НаСервере
Функция ПолучитьКомпонентуСервер()
	Возврат трекер_RabbitMQ.ПолучитьКомпоненту();
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура СозданиеТочкиИОчереди(Команда)
	
	Если ИспользоватьКомпоненту = 0 Тогда
		СозданиеТочкиИОчередиКлиент();
	ИначеЕсли ИспользоватьКомпоненту = 1 Тогда
		СозданиеТочкиИОчередиСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СозданиеТочкиИОчередиКлиент()
	
	КлиентКомпоненты = ПолучитьКомпонентуКлиент();
	СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, Этаформа);
	
КонецПроцедуры

&НаСервере
Процедура СозданиеТочкиИОчередиСервер()
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	
	Если ИспользоватьКомпоненту = 0 Тогда
		ОтправитьСообщениеКлиент();
	ИначеЕсли ИспользоватьКомпоненту = 1 Тогда
		ОтправитьСообщениеСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеКлиент()
	
	КлиентКомпоненты = ПолучитьКомпонентуКлиент();
	ОтправитьСообщениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеСервер()
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	ОтправитьСообщениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСообщение(Команда)
	
	Если ИспользоватьКомпоненту = 0 Тогда
		ПрочитатьСообщениеКлиент();
	ИначеЕсли ИспользоватьКомпоненту = 1 Тогда
		ПрочитатьСообщениеСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСообщениеКлиент()
	
	КлиентКомпоненты = ПолучитьКомпонентуКлиент();
	ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСообщениеСервер()
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	Если ИспользоватьКомпоненту = 0 Тогда
		ПроверитьПодключениеКлиент();
	ИначеЕсли ИспользоватьКомпоненту = 1 Тогда
		ПроверитьПодключениеСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеКлиент()
	
	КлиентКомпоненты = ПолучитьКомпонентуКлиент();
	ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеСервер()
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	
КонецПроцедуры

#Область ПроцедурыРаботаСRabbitMQ

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, Форма)
	
	трекер_RabbitMQКлиентСервер.ПроверитьПодключение(КлиентКомпоненты, Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, Форма)
	
	Попытка
		КлиентКомпоненты.Connect(
			Форма.Адрес,
			Форма.Порт,
			Форма.Логин,
			Форма.Пароль,
			Форма.ВиртуальныйХост);
			
		ТочкаОбмена = Форма.ТочкаОбмена;
		ИмяОчереди  = Форма.ИмяОчереди;
		
		КлиентКомпоненты.DeclareExchange(ТочкаОбмена, "topic", Ложь, Истина, Ложь);
		КлиентКомпоненты.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
		КлиентКомпоненты.BindQueue(ИмяОчереди, ТочкаОбмена, "#" + ИмяОчереди + "#");
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка создания точек и очередей!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Сообщить("Точки и очереди успешно созданы!");
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтправитьСообщениеКлиентСервер(КлиентКомпоненты, Форма)
	трекер_RabbitMQКлиентСервер.ОтправитьСообщение(КлиентКомпоненты, Форма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, Форма)
	
	трекер_RabbitMQКлиентСервер.ПрочитатьСообщение(КлиентКомпоненты, Форма);
	
КонецПроцедуры

#КонецОбласти

